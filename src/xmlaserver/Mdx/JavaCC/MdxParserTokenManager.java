/* Generated By:JavaCC: Do not edit this line. MdxParserTokenManager.java */
package xmlaserver.Mdx.JavaCC;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;

import xmlaserver.Mdx.Language.MdxAxisDefinition;
import xmlaserver.Mdx.Language.MdxExpression;
import xmlaserver.Mdx.Language.MdxFunction;
import xmlaserver.Mdx.Language.MdxFunctionType;
import xmlaserver.Mdx.Language.MdxId;
import xmlaserver.Mdx.Language.MdxIdType;
import xmlaserver.Mdx.Language.MdxSelectDefinition;

/** Token Manager. */
public class MdxParserTokenManager implements MdxParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xc0000000600L) != 0L)
         {
            jjmatchedKind = 75;
            return 44;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            return 64;
         }
         if ((active0 & 0x200000700000L) != 0L)
         {
            jjmatchedKind = 75;
            return 101;
         }
         if ((active0 & 0xeL) != 0L)
         {
            jjmatchedKind = 75;
            return 9;
         }
         if ((active0 & 0x1ff8f8c7800L) != 0L)
         {
            jjmatchedKind = 75;
            return 84;
         }
         if ((active0 & 0x70000000L) != 0L)
         {
            jjmatchedKind = 75;
            return 81;
         }
         if ((active0 & 0x38000L) != 0L)
         {
            jjmatchedKind = 75;
            return 155;
         }
         if ((active0 & 0x200000001f0L) != 0L)
         {
            jjmatchedKind = 75;
            return 219;
         }
         return -1;
      case 1:
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 63;
         }
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 43;
         }
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 218;
         }
         if ((active0 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 80;
         }
         if ((active0 & 0x200000400000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 100;
         }
         if ((active0 & 0x30L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 228;
         }
         if ((active0 & 0xc0c0004L) != 0L)
            return 84;
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 154;
         }
         if ((active0 & 0xfffe3b2fd8aL) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 1;
            return 84;
         }
         return -1;
      case 2:
         if ((active0 & 0x200000400000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 2;
            return 99;
         }
         if ((active0 & 0xf77f232ddb8L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 2;
            return 84;
         }
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 2;
            return 217;
         }
         if ((active0 & 0x10000L) != 0L)
            return 175;
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 2;
            return 42;
         }
         if ((active0 & 0x8801802002L) != 0L)
            return 84;
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 2;
            return 62;
         }
         return -1;
      case 3:
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
            return 41;
         }
         if ((active0 & 0x40L) != 0L)
            return 216;
         if ((active0 & 0xe46d030d580L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
            return 84;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
            return 61;
         }
         if ((active0 & 0x13122020838L) != 0L)
            return 84;
         if ((active0 & 0x200000400000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 3;
            return 98;
         }
         return -1;
      case 4:
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
            return 60;
         }
         if ((active0 & 0x200000400000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
            return 97;
         }
         if ((active0 & 0x4010001000L) != 0L)
            return 84;
         if ((active0 & 0xe06c030c580L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
            return 84;
         }
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 4;
            return 40;
         }
         return -1;
      case 5:
         if ((active0 & 0x100000000000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 75;
               jjmatchedPos = 5;
            }
            return 59;
         }
         if ((active0 & 0x200000400000L) != 0L)
            return 96;
         if ((active0 & 0x200L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 75;
               jjmatchedPos = 5;
            }
            return 39;
         }
         if ((active0 & 0x480000000L) != 0L)
            return 84;
         if ((active0 & 0xe024030c580L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 75;
               jjmatchedPos = 5;
            }
            return 84;
         }
         return -1;
      case 6:
         if ((active0 & 0xe0240008480L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 6;
            return 84;
         }
         if ((active0 & 0x200000304100L) != 0L)
            return 84;
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 6;
            return 38;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 6;
            return 58;
         }
         return -1;
      case 7:
         if ((active0 & 0xe0040008400L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 7;
            return 84;
         }
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 7;
            return 57;
         }
         if ((active0 & 0x200L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 7;
            return 37;
         }
         if ((active0 & 0x200000080L) != 0L)
            return 84;
         return -1;
      case 8:
         if ((active0 & 0x200L) != 0L)
            return 36;
         if ((active0 & 0x20000000000L) != 0L)
            return 84;
         if ((active0 & 0x1c0040008400L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 8;
            return 84;
         }
         return -1;
      case 9:
         if ((active0 & 0x1c0000008400L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 9;
            return 84;
         }
         if ((active0 & 0x40000000L) != 0L)
            return 84;
         return -1;
      case 10:
         if ((active0 & 0xc0000000400L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 10;
            return 84;
         }
         if ((active0 & 0x100000008000L) != 0L)
            return 84;
         return -1;
      case 11:
         if ((active0 & 0xc0000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 11;
            return 84;
         }
         if ((active0 & 0x400L) != 0L)
            return 84;
         return -1;
      case 12:
         if ((active0 & 0xc0000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 12;
            return 84;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 13;
            return 84;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 84;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStopAtPos(0, 54);
      case 40:
         return jjStopAtPos(0, 64);
      case 41:
         return jjStopAtPos(0, 70);
      case 42:
         return jjStopAtPos(0, 53);
      case 43:
         return jjStopAtPos(0, 68);
      case 44:
         return jjStopAtPos(0, 56);
      case 45:
         return jjStopAtPos(0, 66);
      case 46:
         return jjStopAtPos(0, 58);
      case 47:
         return jjStopAtPos(0, 71);
      case 58:
         return jjStopAtPos(0, 55);
      case 60:
         jjmatchedKind = 65;
         return jjMoveStringLiteralDfa1_0(0x8000000000000000L, 0x8L);
      case 61:
         return jjStopAtPos(0, 59);
      case 62:
         jjmatchedKind = 61;
         return jjMoveStringLiteralDfa1_0(0x1000000000000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 72);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0xeL, 0x0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x200000001f0L, 0x0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_0(0xc0000000600L, 0x0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x7800L, 0x0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x38000L, 0x0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_0(0x100000000000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0xc0000L, 0x0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa1_0(0x200000700000L, 0x0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x3800000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0xc000000L, 0x0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x70000000L, 0x0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_0(0x180000000L, 0x0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(0xe00000000L, 0x0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa1_0(0x16000000000L, 0x0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 62);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 69);
      default :
         return jjMoveNfa_0(10, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(1, 60);
         else if ((active0 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(1, 63);
         break;
      case 62:
         if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(1, 67);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x10300030L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x200e80400040L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x7000000080L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x110000008200L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000800L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(1, 18, 84);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 26, 84);
         return jjMoveStringLiteralDfa2_0(active0, 0x2002L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x8101810100L, active1, 0L);
      case 82:
      case 114:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(1, 27, 84);
         return jjMoveStringLiteralDfa2_0(active0, 0xe0040020400L, active1, 0L);
      case 83:
      case 115:
         if ((active0 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(1, 2, 84);
         else if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 84);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x4008L, active1, 0L);
      case 124:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStopAtPos(1, 57);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000080L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L);
      case 68:
      case 100:
         if ((active0 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(2, 1, 84);
         else if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 13, 84);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x107000000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0xc0000000408L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x402000140L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000400200L);
      case 78:
      case 110:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(2, 23, 84);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x20040020000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x5000L);
      case 82:
      case 114:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(2, 16, 175);
         else if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 39, 84);
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x830L);
      case 84:
      case 116:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(2, 24, 84);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(2, 35, 84);
         return jjMoveStringLiteralDfa3_0(active0, 0x10080100000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000400000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L);
      case 69:
      case 101:
         if ((active0 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(3, 4, 84);
         else if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(3, 11, 84);
         return jjMoveStringLiteralDfa4_0(active0, 0x410000200L);
      case 72:
      case 104:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 40, 84);
         break;
      case 76:
      case 108:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(3, 6, 216);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 25, 84);
         return jjMoveStringLiteralDfa4_0(active0, 0xc0000004400L);
      case 77:
      case 109:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(3, 17, 84);
         break;
      case 78:
      case 110:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(3, 29, 84);
         else if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 36, 84);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 37, 84);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000080L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x104000200000L);
      case 83:
      case 115:
         if ((active0 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(3, 3, 84);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 84);
         return jjMoveStringLiteralDfa4_0(active0, 0x20000008000L);
      case 84:
      case 116:
         if ((active0 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(3, 5, 84);
         return jjMoveStringLiteralDfa4_0(active0, 0x200001000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000100L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000004000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000L);
      case 69:
      case 101:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 38, 84);
         return jjMoveStringLiteralDfa5_0(active0, 0x200040400000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0xc0000000400L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x200L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L);
      case 83:
      case 115:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 84);
         return jjMoveStringLiteralDfa5_0(active0, 0x20000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x8080L);
      case 89:
      case 121:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(4, 12, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0xc0000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x100080L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x4000L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa6_0(active0, 0x20000000000L);
      case 78:
      case 110:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(5, 31, 84);
         return jjMoveStringLiteralDfa6_0(active0, 0x100L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000L);
      case 82:
      case 114:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active0, 0x300040008000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x200L);
      case 84:
      case 116:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(5, 34, 84);
         return jjMoveStringLiteralDfa6_0(active0, 0x400L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x400L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x200L);
      case 78:
      case 110:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(6, 14, 84);
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0xe0000008000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x80L);
      case 83:
      case 115:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(6, 8, 84);
         else if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(6, 20, 84);
         else if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(6, 21, 84);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 45, 84);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 72:
      case 104:
         return jjMoveStringLiteralDfa8_0(active0, 0x100000000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0x20040000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400L);
      case 83:
      case 115:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(7, 7, 84);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(7, 33, 84);
         break;
      case 87:
      case 119:
         return jjMoveStringLiteralDfa8_0(active0, 0xc0000008000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0x100000000000L);
      case 78:
      case 110:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(8, 9, 36);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 41, 84);
         return jjMoveStringLiteralDfa9_0(active0, 0xc0000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0x400L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa10_0(active0, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa10_0(active0, 0x40000000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa10_0(active0, 0x80000000000L);
      case 83:
      case 115:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(9, 30, 84);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0x400L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa10_0(active0, 0x100000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 44, 84);
         return jjMoveStringLiteralDfa11_0(active0, 0xc0000000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa11_0(active0, 0x400L);
      case 84:
      case 116:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(10, 15, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 72:
      case 104:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(11, 10, 84);
         break;
      case 77:
      case 109:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa12_0(active0, 0x40000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, 0x40000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000L);
      case 76:
      case 108:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 42, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(14, 43, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec3 = {
   0x3fffffffffL, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec5 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
};
static final long[] jjbitVec6 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec7 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 270;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 175:
               case 84:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 80:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 59:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 57:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 9:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 63:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 61:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 60:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 39:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 37:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 43:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 41:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 97:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 218:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 216:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 219:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 99:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 81:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 101:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 58:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 64:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 62:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 154:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 155:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 96:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 38:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 228:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 44:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 36:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 42:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 10:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 86;
                  else if (curChar == 36)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  break;
               case 40:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 217:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 98:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 100:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 83:
                  if (curChar != 36)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 85:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 87:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 87;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 175:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 80:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 57:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 63:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 61:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 39:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 41:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 97:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 218:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 216:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 219:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 99:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 101:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 64:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 62:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 154:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 155:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 96:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 139;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 129;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 113;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 104;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 38:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 228:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 44:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 36:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 10:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(0, 1);
                  else if ((0x100000001000L & l) != 0L)
                     jjAddStates(2, 3);
                  else if ((0x800000008L & l) != 0L)
                     jjAddStates(4, 5);
                  else if ((0x4000000040L & l) != 0L)
                     jjAddStates(6, 12);
                  else if ((0x200000002000L & l) != 0L)
                     jjAddStates(13, 17);
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 217:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 100:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAdd(84);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 0:
                  if ((0x2000000020L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 1:
                  if ((0x1000000010000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 11:
                  if ((0x4000000040000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 12:
               case 170:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(11);
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
               case 195:
                  if ((0x20000000200000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 22:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x2000000020L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 26:
               case 46:
               case 66:
               case 111:
               case 120:
               case 220:
               case 237:
               case 261:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(25);
                  break;
               case 27:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 45:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 47:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 65:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 67:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 82:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 84:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 86:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(87);
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(87);
                  break;
               case 88:
                  if ((0x200000002000L & l) != 0L)
                     jjAddStates(13, 17);
                  break;
               case 89:
                  if ((0x400000004000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 90:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 102:
                  if ((0x200000002000000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 103:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 121:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x20000000200000L & l) != 0L)
                     jjCheckNAdd(25);
                  break;
               case 137:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x4000000040L & l) != 0L)
                     jjAddStates(6, 12);
                  break;
               case 147:
                  if ((0x8000000080000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 148:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 156:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 157:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if ((0x400000004000000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 164:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 176:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x10000000100000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 179:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x8000000080L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 184:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 196:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x800000008L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 209:
                  if ((0x100000001000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 210:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 221:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 231:
                  if ((0x8000000080L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 232:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 238:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 253:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(0);
                  break;
               case 254:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 262:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 175:
               case 84:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 80:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 59:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 57:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 9:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 63:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 61:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 60:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 39:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 37:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 43:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 41:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 97:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 218:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 216:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 219:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 99:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 81:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 101:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 58:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 64:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 62:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 154:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 155:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 96:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 38:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 228:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 44:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 36:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 42:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 10:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 40:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 217:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 98:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 100:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(84);
                  break;
               case 87:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 87;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 270 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 93:
         return jjStopAtPos(0, 73);
      default :
         return 1;
   }
}
static final int[] jjnextStates = {
   260, 269, 236, 251, 219, 229, 155, 162, 169, 177, 182, 194, 207, 101, 110, 119, 
   135, 145, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      case 45:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 61:
         return ((jjbitVec7[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, "\52", 
"\41", "\72", "\54", "\174\174", "\56", "\75", "\76\75", "\76", "\173", "\74\75", 
"\50", "\74", "\55", "\74\76", "\53", "\175", "\51", "\57", "\133", "\135", null, 
null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "QUOTED_ID_STATE",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 0, -1, 
   -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffe0ffffffffffffL, 0x1fffL, 
};
static final long[] jjtoSkip = {
   0x1f000000000000L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[270];
private final int[] jjstateSet = new int[540];
protected char curChar;
/** Constructor. */
public MdxParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MdxParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 270; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100003600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 74)
       {
          jjmatchedKind = 74;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

}
